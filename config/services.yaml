# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    router.test:
      class: 'Symfony\Bundle\FrameworkBundle\Routing\Router'
      tags:
        -
          name: 'monolog.logger'
          channel: 'router'
        -
          name: 'container.service_subscriber'
          id: 'routing.loader'
      arguments:
        - '@Psr\Container\ContainerInterface'
        - '%router.resource%'
        -
          cache_dir: '%kernel.cache_dir%'
          debug: '%kernel.debug%'
          generator_class: Symfony\Component\Routing\Generator\UrlGenerator
          generator_base_class: Symfony\Component\Routing\Generator\UrlGenerator
          generator_dumper_class: Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper
          generator_cache_class: '%router.cache_class_prefix%UrlGenerator'
          matcher_class: Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher
          matcher_base_class: Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher
          matcher_dumper_class: Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper
          matcher_cache_class: '%router.cache_class_prefix%UrlMatcher'
        - '@router.request_context'
        - '@parameter_bag'
        - '@logger'
      calls:
        - method: 'setConfigCacheFactory'
          arguments:
            - '@config_cache_factory'

    router.default:
      alias: router.test
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
